service: pedirPizzas

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  profile: felipe_ibarra
  environment:
    REGION: ${self:provider.region}
    PENDING_ORDER_QUEUE:
      Ref: PendingOrdersQueue
    PENDING_ORDER_QUEUE_NAME: PendingOrdersQueue
    ORDERED_PIZZAS_TABLE: OrderedPizzasTable

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: "arn:aws:sqs:${self:provider.region}:*:${self:provider.environment.PENDING_ORDER_QUEUE_NAME}"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ORDERED_PIZZAS_TABLE}"

functions:
  hacerPedido:
    handler: handler.hacerPedido
    events:
      - http:
          method: post
          path: hacerPedido
  prepararPedido:
    handler: handler.prepararPedido
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PendingOrdersQueue
              - Arn
          batchSize: 1
  enviarPedido:
    handler: handler.enviarPedido
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          StartingPosition: LASTEST
          arn:
            Fn::GetAtt:
              - OrderedPizzasTable
              - StreamArn
  estadoPedido:
    handler: handler.estadoPedido
    events:
      - http:
          method: get
          path: consultarPedido/{orderId}

resources:
  Resources:
    PendingOrdersQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.PENDING_ORDER_QUEUE_NAME}
    OrderedPizzasTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "orderId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "orderId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ORDERED_PIZZAS_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE
            